package com.ppm.custom.war.servlet;

import org.apache.poi.xslf.usermodel.*;

import javax.servlet.ServletException;
import javax.servlet.http.HttpServlet;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import java.io.IOException;
import java.util.Enumeration;


/**
 * This Servlet demonstrate how to generate Powerpoint files in a Custom WAR for the "PPM Web Reports" introduced in PPM 10.0.1 (ksc_run_web_report)
 * <p>
 * The advantage of generating files in a custom WAR is that you can use any third party lib you want
 * - in our case, a version of POI much more recent than the one used in PPM itg.war,
 * which will not conflict with it and which will not be modified whenever PPM R&D decides to use a different POI version in PPM.
 *
 * This Servlet just create a Single slide PPTX that will expose some of the meaningful parameters passed to the Web Report code, including report submission metadata.
 */
public class PowerPointServlet extends HttpServlet {
    @Override
    protected void doGet(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {
        doPost(request, response);
    }

    @Override
    protected void doPost(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {

        // This servlet returns a Powerpoint file, so let's set the correct Content type
        response.setContentType("application/vnd.openxmlformats-officedocument.presentationml.presentation");

        XMLSlideShow ppt = new XMLSlideShow();
        XSLFSlideMaster defaultMaster = ppt.getSlideMasters().get(0);

        XSLFSlideLayout layout
                = defaultMaster.getLayout(SlideLayout.TITLE_AND_CONTENT);
        XSLFSlide slide = ppt.createSlide(layout);

        XSLFTextShape titleShape = slide.getPlaceholder(0);
        XSLFTextShape contentShape = slide.getPlaceholder(1);

        titleShape.setText("This Powerpoint slide was generated by PPM Custom WAR!");

        StringBuilder sb = new StringBuilder("Here are some of the parameters passed to the Report Servlet in request attributes:\n");

        Enumeration<String> attributeNames = request.getAttributeNames();

        while (attributeNames.hasMoreElements()) {
            String attrName = attributeNames.nextElement();
            if (attrName.equals("REPORT_ID") || attrName.equals("USER_ID") || attrName.startsWith("RPT_") || attrName.startsWith("P_") || attrName.startsWith("VP_")) {
                sb.append(attrName + ": " + request.getAttribute(attrName).toString() + "\n");
            }

            // Note: Some other report_related attributes are passed, but there's alse a lot of noise
            // added by PPM various request filters.
        }

        contentShape.setText(sb.toString());

        ppt.write(response.getOutputStream());
    }
}
